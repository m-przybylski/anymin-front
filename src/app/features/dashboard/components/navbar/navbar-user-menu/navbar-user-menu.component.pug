.navbar-user-menu([@slideInOut]="animationState")
  ul.smm-only
    li.menu-list__section.menu-list__section--mobile-close
      span.title([translate]="'NAVBAR_USER_MENU.ACCOUNT'")
      span.icon.icon-clear

  ul.menu-list
    //- keep in mind to remove some props once user added to platform
    li.menu-list__header(
      [ngClass]="{'menu-list__header--user': userType === userTypeEnum.USER}",
      (click)="navigateToProfile()",
    )
      .user-name-container(*ngIf="userName; else anonymous")
        span.user-name-container__title([translate]="'NAVBAR_USER_MENU.WELCOME'")
        span.user-name-container__user-name {{ userName }}

      ng-template(#anonymous)
        //- keep in mind to remove some props once user added to platform
        .user-name-container([ngClass]="{'user-name-container--user': userType === userTypeEnum.USER}")
          span.user-name-container__title([translate]="'NAVBAR_USER_MENU.ANONYMOUS'")
          span.user-name-container__user-name([translate]="'NAVBAR_USER_MENU.FILL_PROFILE'")

      .profile-link
        ng-container([ngSwitch]="userType")
          a.profile-link__anchor(
            (click)="openEditProfileModalAsClient($event)",
            plat-button-link,
            *ngSwitchCase="userTypeEnum.USER",
            [translate]="'NAVBAR_USER_MENU.EDIT'"
          )
          a.profile-link__anchor(
            plat-button-link,
            *ngSwitchCase="userTypeEnum.EXPERT",
            [routerLink]="userProfileUrl",
            [translate]="'NAVBAR_USER_MENU.SHOW'"
          )
          a.profile-link__anchor(
            plat-button-link,
            *ngSwitchCase="userTypeEnum.COMPANY",
            [routerLink]="companyProfileUrl",
            [translate]="'NAVBAR_USER_MENU.SHOW'"
          )

    li.menu-list__section(*ngIf="userType === userTypeEnum.EXPERT")
      ul
        li.menu-list__row.menu-list__row--visibility
          .title-container
            span(plat-icon, iconClass='available')
            span.option-title {{ (isVisible ? 'NAVBAR_USER_MENU.SWITCH_LABEL.AVAILABLE' : 'NAVBAR_USER_MENU.SWITCH_LABEL.UNAVAILABLE') | translate }}

          plat-input-switch([formControl]="visibilityControl")

    li.menu-list__section(*ngFor="let menuItemsGroup of groupedMenuItems")
      ul
        li.menu-list__row(
          *ngFor="let menuItem of menuItemsGroup",
          [ngClass]="{'lgm-only': menuItem.group === navigationItemGroups.NAVBAR}",
        )
          .menu-list__row__content(
            *ngIf="menuItem.url; else functionCallback",
            [routerLink]="menuItem.url"
          )
            span(plat-icon, [iconClass]="menuItem.iconClass")
            span.option-title([translate]="menuItem.trKey")
            .menu-list__counter-wrapper
              plat-activities-counter(*ngIf="menuItem.counter | async as combineCounter", [counter]="combineCounter")

          ng-template(#functionCallback)
            .menu-list__row__content((click)="onClick(menuItem.callbackFnName)")
              span(plat-icon, [iconClass]="menuItem.iconClass")
              span.option-title([translate]="menuItem.trKey")

    li.menu-list__section.menu-list__section--switch-account(*ngIf="showSwitchAccount")
      ul
        li.menu-list__row(
          (click)="onSwitchAccount(switchAccountType)",
          [routerLink]="switchAccountUrl"
        )
          plat-user-avatar(
            [avatarSize]="avatarSize32",
            [avatarToken]="switchAccountAvatarToken"
          )
          span.option-title([translate]="switchAccountTrKey")

    li.menu-list__section.menu-list__section--application-download(*ngIf="userType !== userTypeEnum.USER")
      ul
        li.menu-list__row
          span.option-title {{ 'NAVBAR_USER_MENU.APPLICATION_DOWNLOAD' | translate }}
          .application-download((click)="openAppStore()")
            span.icon.icon-appstore
          .application-download((click)="openGooglePlay()")
            span.icon.icon-playstore
